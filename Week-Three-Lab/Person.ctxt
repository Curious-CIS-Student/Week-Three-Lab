#BlueJ class context
comment0.params=name\ age\ gender
comment0.target=Person(java.lang.String,\ int,\ java.lang.String)
comment0.text=\r\n\ Constructor\ for\ objects\ of\ class\ Person\r\n\ We\ use\ private\ methods\ to\ set\ the\ name,\ age,\ and\ gender\ in\ order\ to\ simplify\r\n\ the\ constructor\ and\ allow\ it\ to\ have\ greater\ cohesion.\ The\ constructor\r\n\ shouldn't\ have\ to\ check\ the\ values\ and\ also\ \ initialize\ them.\r\n\ Currently\ the\ constructor\ simply\ leaves\ a\ null\ value\ for\ a\ field\ if\ there\ is\r\n\ invalid\ input,\ but\ since\ we\ used\ private\ methods\ it\ will\ be\ easy\ to\ add\ an\r\n\ exception\ setup\ later.\r\n
comment1.params=
comment1.target=int\ getAge()
comment1.text=\r\n\ Returns\ the\ Age\ of\ a\ person\r\n\ @return\ \ \ the\ person's\ Age\r\n
comment2.params=
comment2.target=java.lang.String\ getName()
comment2.text=\r\n\ Returns\ the\ Name\ of\ a\ person\r\n\ @return\ \ \ the\ person's\ Name\r\n
comment3.params=
comment3.target=java.lang.String\ getGender()
comment3.text=\r\n\ Returns\ the\ Gender\ of\ a\ person\r\n\ @return\ \ \ the\ person's\ Gender\r\n
comment4.params=
comment4.target=java.lang.String\ toString()
comment4.text=\r\n\ Returns\ a\ formatted\ string\ with\ information\ about\ a\ person\ object\r\n\ @return\ \ \ information\ about\ the\ person\ in\ a\ string\r\n
comment5.params=
comment5.target=void\ printInfo()
comment6.params=name
comment6.target=void\ setName(java.lang.String)
comment6.text=\r\n\ Sets\ the\ name\ of\ the\ person\ object.\r\n\ @param\ \ name\ \ the\ desired\ name\ for\ the\ person\r\n
comment7.params=age
comment7.target=void\ setAge(int)
comment7.text=\r\n\ Sets\ the\ age\ of\ the\ person\ object.\r\n\ @param\ \ age\ \ the\ desired\ age\ for\ the\ person\r\n
comment8.params=gender
comment8.target=void\ setGender(java.lang.String)
comment8.text=\r\n\ Sets\ the\ gender\ of\ the\ person\ object\ ("male"\ or\ "female").\r\n\ @param\ \ gender\ \ the\ desired\ gender\ for\ the\ person\r\n
numComments=9
